{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","components/complex/loading/loading.js"],"names":["WithSpinner","WrappedComponent","_ref","isLoading","otherProps","Object","D_Coding_Redux_Saga_Firebase_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_complex_loading_loading__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_fade_in__WEBPACK_IMPORTED_MODULE_1__","react_fade_in__WEBPACK_IMPORTED_MODULE_1___default","react_lottie__WEBPACK_IMPORTED_MODULE_2__","react_lottie__WEBPACK_IMPORTED_MODULE_2___default","_doneloading_json__WEBPACK_IMPORTED_MODULE_3__","defaultOptions2","loop","autoplay","animationData","doneData","rendererSettings","preserveAspectRatio","Loading","state","class","options","height","width"],"mappings":"+HAQeA,IAJK,SAAAC,GAAgB,OAAI,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,UAAcC,EAAiBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,eACxE,OAAOC,EAAYI,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAcH,EAAAC,EAAAC,cAACR,EAAqBG,uCCLzD,IAAAO,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,KAgBMQ,GAhBNR,EAAA,KAgBwB,CACtBS,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,iBAAkB,CAChBC,oBAAqB,oBAmBTC,IAfO,SAACC,GAEpB,OACEf,EAAAL,EAAAC,cAAA,WACII,EAAAL,EAAAC,cAACO,EAAAR,EAAD,KACEK,EAAAL,EAAAC,cAAA,OAAKoB,MAAM,oDACThB,EAAAL,EAAAC,cAAA,4BACEI,EAAAL,EAAAC,cAACS,EAAAV,EAAD,CAAQsB,QAASV,EAAiBW,OAAQ,IAAKC,MAAO","file":"static/js/1.698792ec.chunk.js","sourcesContent":["import React from 'react';\r\n// import Spinner2 from '../spinner/spinner.component2';\r\nimport Loading from '../complex/loading/loading';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Loading /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport * as doneData from \"./doneloading.json\";\n// import ReactLoading from \"react-loading\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport * as legoData from \"./legoloading.json\";\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: legoData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nconst defaultOptions2 = {\n  loop: false,\n  autoplay: true,\n  animationData: doneData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n  \nexport const Loading = (state) => {\n\n    return (\n      <div>        \n          <FadeIn>\n            <div class=\"d-flex justify-content-center align-items-center\">\n              <h1>fetching pizza</h1>\n                <Lottie options={defaultOptions2} height={120} width={120} />  \n            </div>\n          </FadeIn>\n      </div>\n    );\n  \n}\n\nexport default (Loading);\n"],"sourceRoot":""}